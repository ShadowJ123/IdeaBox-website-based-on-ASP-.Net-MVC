@model PaginatedList<CaseStudy_Team2_Final.Models.Idea>

@{
    ViewData["Title"] = "Ideas";
}

<h1>Your Ideas</h1>

<p>
    <a asp-action="Create">Create New Idea</a>
</p>

@*@using (Html.BeginForm("Index", "Idea", FormMethod.Get))
{
    <p>
        Search by : <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" />
    </p>
}*@

<form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Search by : <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" />
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Contributed by</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.*@Title@*)*@
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>*@

            <th>
                @*@Html.DisplayNameFor(model => model.*@Tag@*)*@
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RateSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Rating</a>
            </th>
           
            <th>
                @*@Html.DisplayNameFor(model => model.*@Status@*)*@
            </th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ContributedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Tag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @*Pending*@
                    @*<button class="w3-button w3-red">Accept</button>*@
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IdeaID">Edit</a> |

                    <a asp-action="Details" asp-route-id="@item.IdeaID">Details</a> |
                    @*<a asp-action="Delete" asp-route-id="@item.IdeaID">Delete</a> |*@
                    @*<button type="submit" form="nameform" value="Submit">Submit</button>*@
                </td>
            </tr>
        }
    </tbody>
</table>

@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@


@{

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>